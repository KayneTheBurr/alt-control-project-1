═══════════════════════════════════════════════════
    堆叠滑落效果调节快速指南
═══════════════════════════════════════════════════

📌 核心概念
───────────────────────────────────────────────────

累积滑落系统让每个物品在下方物品基础上继续滑落，
产生真实的物理堆叠倾斜效果。

关键要素：
  ✓ 底部物品不动（锚点）
  ✓ 每层产生滑落增量
  ✓ 滑落增量逐层累积
  ✓ 越高累积偏移越大


═══════════════════════════════════════════════════
    参数快速调节
═══════════════════════════════════════════════════

【基础偏移量】baseOffsetPerTilt
───────────────────────────────────────────────────
  • 控制：每级倾斜的基础滑落距离
  • 范围：0.05 - 0.5
  
  推荐值：
    轻微滑落    → 0.08
    适中滑落    → 0.15  ⭐推荐
    明显滑落    → 0.25
    夸张滑落    → 0.4


【高度影响系数】heightMultiplier
───────────────────────────────────────────────────
  • 控制：高度对滑落的影响程度
  • 范围：0.0 - 2.0
  
  推荐值：
    均匀滑落    → 0.5   (高度影响小)
    标准滑落    → 1.0   ⭐推荐
    加强滑落    → 1.5   (顶部物品更夸张)
    极限滑落    → 2.0


【偏移模式】offsetMode
───────────────────────────────────────────────────
  
  Linear（线性）
    特点：均匀递增的滑落
    适合：规则整齐的堆叠
    视觉：稳定、可预测
  
  Exponential（指数）⭐推荐
    特点：越高滑落越剧烈
    适合：高难度游戏
    视觉：戏剧化、紧张感
  
  Sine（正弦）
    特点：自然的物理曲线
    适合：真实模拟
    视觉：柔和、自然
  
  Custom（自定义）
    特点：完全自定义曲线
    适合：特殊需求
    视觉：可调节


【平滑时间】smoothTime
───────────────────────────────────────────────────
  • 控制：位置变化的过渡速度
  • 范围：0.0 - 1.0
  
  推荐值：
    瞬间响应    → 0.05
    快速响应    → 0.1
    标准响应    → 0.2   ⭐推荐
    缓慢响应    → 0.5


═══════════════════════════════════════════════════
    预设方案
═══════════════════════════════════════════════════

【方案1：真实物理模拟】
───────────────────────────────────────────────────
  baseOffsetPerTilt   = 0.12
  heightMultiplier    = 1.0
  offsetMode          = Sine
  smoothTime          = 0.25
  
  效果：自然、真实的物理堆叠效果


【方案2：戏剧化游戏效果】⭐推荐
───────────────────────────────────────────────────
  baseOffsetPerTilt   = 0.15
  heightMultiplier    = 1.2
  offsetMode          = Exponential
  smoothTime          = 0.2
  
  效果：明显但不夸张的滑落，适合游戏


【方案3：极限挑战】
───────────────────────────────────────────────────
  baseOffsetPerTilt   = 0.25
  heightMultiplier    = 1.5
  offsetMode          = Exponential
  smoothTime          = 0.15
  
  效果：剧烈滑落，高难度


【方案4：轻松休闲】
───────────────────────────────────────────────────
  baseOffsetPerTilt   = 0.08
  heightMultiplier    = 0.8
  offsetMode          = Linear
  smoothTime          = 0.3
  
  效果：温和滑落，低难度


═══════════════════════════════════════════════════
    实际效果预期
═══════════════════════════════════════════════════

【居中阶段】
    ▢
    ▢
    ▢     所有物品垂直对齐
    ▢
    ▢

【右倾1（15°）】
    ▢        ← 顶部轻微偏移
   ▢         ← 逐层减少
  ▢          ← 
 ▢           ← 
▢            ← 底部不动

【右倾2（25°）】
      ▢      ← 顶部明显偏移
    ▢        ← 累积增加
   ▢         ← 
  ▢          ← 
 ▢           ← 底部不动

【右倾倒（35°）】
        ▢    ← 顶部极限偏移（开始掉落）
      ▢      ← 
    ▢        ← 
   ▢         ← 
  ▢          ← 底部不动


═══════════════════════════════════════════════════
    调试技巧
═══════════════════════════════════════════════════

【启用调试信息】
  1. 勾选 showDebugInfo
  2. 运行游戏
  3. 查看左下角GUI面板

【查看详细计算】
  1. 勾选 logOffsetCalculations
  2. 查看Console输出
  3. 分析每层的滑落数值

【Scene视图可视化】
  - 黄色线：物品连接
  - 绿色线：基准X轴
  - 红色线：偏移指示


═══════════════════════════════════════════════════
    常见问题
═══════════════════════════════════════════════════

Q: 滑落效果不够明显？
A: 增大 baseOffsetPerTilt 或 heightMultiplier

Q: 顶部物品偏移太夸张？
A: 降低 heightMultiplier 或使用 Linear 模式

Q: 想要更自然的效果？
A: 使用 Sine 模式，smoothTime 设置为 0.25-0.3

Q: 阶段切换时物品跳动？
A: 增大 smoothTime 或检查 objectSpacing 是否一致

Q: 如何调整不同倾斜阶段的滑落差异？
A: 系统自动根据 tiltLevel（0-3）调整，
   无需手动配置


═══════════════════════════════════════════════════
    进阶技巧
═══════════════════════════════════════════════════

【自定义曲线模式】
  1. offsetMode 设为 Custom
  2. 编辑 customOffsetCurve
     • X轴：归一化高度（0-1）
     • Y轴：高度系数（建议0-1）
  3. 设计你想要的滑落曲线

【动态调整参数】
  ```csharp
  // 运行时修改滑落参数
  visualController.baseOffsetPerTilt = 0.2f;
  visualController.heightMultiplier = 1.5f;
  visualController.RefreshPositions();
  ```

【获取实时位置】
  ```csharp
  // 获取所有X位置
  float[] xPositions = visualController.GetAllXPositions();
  
  // 分析最大偏移
  float maxOffset = xPositions[xPositions.Length - 1] 
                  - xPositions[0];
  ```


═══════════════════════════════════════════════════
    测试建议
═══════════════════════════════════════════════════

1. 先用默认参数运行，观察基本效果
2. 调整 baseOffsetPerTilt，找到合适的滑落幅度
3. 尝试不同的 offsetMode，选择最佳视觉效果
4. 微调 heightMultiplier 优化顶部物品表现
5. 最后调整 smoothTime 优化动画流畅度


═══════════════════════════════════════════════════
    最后更新：2024-10-13
═══════════════════════════════════════════════════


