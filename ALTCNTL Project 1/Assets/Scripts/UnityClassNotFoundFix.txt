═══════════════════════════════════════════════════
    Unity 脚本类无法找到 - 修复指南
═══════════════════════════════════════════════════

🔍 问题症状
───────────────────────────────────────────────────

• Inspector中显示 "Script (Missing)"
• 无法从Add Component菜单找到脚本
• 控制台显示 "can't add script component"
• 所有自定义脚本都不可用

═══════════════════════════════════════════════════
    ⚡ 快速修复方案（按顺序尝试）
═══════════════════════════════════════════════════

【方法1：强制重新编译】★ 最常见解决方案

  1. 在Unity编辑器中：
     Assets → Reimport All
  
  2. 等待进度条完成
  
  3. 如果还不行，尝试：
     Edit → Preferences → External Tools
     → Regenerate project files
  
  预期：Unity会重新编译所有脚本


【方法2：清除Unity缓存】

  1. 关闭Unity编辑器
  
  2. 删除以下文件夹：
     • Library/
     • Temp/
     • obj/
  
  3. 重新打开项目
  
  预期：Unity会重建所有缓存


【方法3：检查编译错误】

  1. 打开 Console 窗口
     Window → General → Console
  
  2. 查看是否有红色错误
  
  3. 点击 "Clear on Play" 确保看到所有错误
  
  4. 如果有错误，修复它们
  
  预期：修复所有编译错误后脚本可用


【方法4：安全模式重启】

  1. 关闭Unity
  
  2. 按住 Alt 键启动Unity
  
  3. 选择项目
  
  4. 在弹出的对话框中选择：
     "Import in Safe Mode"
  
  预期：Unity在安全模式下重新导入


【方法5：手动修复脚本引用】

  1. 找到任何一个.cs文件
  
  2. 右键 → Reimport
  
  3. 等待完成
  
  4. 重复几个关键脚本
  
  预期：触发重新编译

═══════════════════════════════════════════════════
    🔧 已知问题修复
═══════════════════════════════════════════════════

【问题A：多个类在一个文件中】

  当前项目中有两个这样的情况：
  
  1. SwaySliderUISetup.cs 包含：
     • SwaySliderUISetup
     • SwayPhaseTextUpdater  ← 额外的类
  
  2. StackController.cs 包含：
     • StackController
     • DropAnimation  ← 额外的类
  
  解决方案：
    这通常不会导致问题，但如果出现问题，
    可以将额外的类分离到独立文件中。


【问题B：文件编码问题】

  确保所有.cs文件使用UTF-8编码
  
  检查方法：
    在代码编辑器中检查文件编码
  
  修复方法：
    用记事本打开 → 另存为 → 编码选择UTF-8


【问题C：文件名和类名不匹配】

  ✅ 已检查：所有文件名和类名都匹配
  
  当前项目的所有脚本：
    • SwayController.cs → public class SwayController
    • StackController.cs → public class StackController
    • SwayPhaseSlider.cs → public class SwayPhaseSlider
    等等...
  
  状态：无此问题

═══════════════════════════════════════════════════
    🎯 针对本项目的建议
═══════════════════════════════════════════════════

【最可能的原因】

  Unity编辑器缓存问题
  
  最佳修复流程：
  
  1. 保存场景（Ctrl+S）
  
  2. 关闭Unity编辑器
  
  3. 删除以下文件夹：
     ALTCNTL Project 1/Library/
     ALTCNTL Project 1/Temp/
  
  4. 重新打开Unity项目
  
  5. 等待Unity重新导入所有资源（可能需要几分钟）
  
  6. 检查脚本是否可用


【如果上述方法都不行】

  检查Unity版本兼容性：
  
  1. 查看 ProjectSettings/ProjectVersion.txt
  
  2. 确认Unity编辑器版本匹配
  
  3. 如果版本不匹配，可能需要：
     • 升级Unity
     • 或使用项目所需的Unity版本

═══════════════════════════════════════════════════
    📋 验证修复
═══════════════════════════════════════════════════

修复后，验证以下内容：

  ✓ Console无编译错误
  ✓ 可以在Add Component中找到脚本
  ✓ 已有脚本组件不显示"Missing"
  ✓ 可以点击脚本查看代码
  ✓ Inspector显示脚本的public字段

═══════════════════════════════════════════════════
    🐛 调试信息收集
═══════════════════════════════════════════════════

如果问题仍然存在，收集以下信息：

  1. Unity版本：
     Help → About Unity
  
  2. Console错误：
     截图所有红色错误
  
  3. 项目设置：
     检查 ProjectSettings/ProjectVersion.txt
  
  4. 脚本状态：
     在Project窗口中，脚本图标是否正常
     （应该是C#图标，而不是白色纸张图标）

═══════════════════════════════════════════════════
    ⚠️ 注意事项
═══════════════════════════════════════════════════

• 删除Library和Temp文件夹是安全的
  （Unity会重新生成它们）

• 不要删除Assets文件夹
  （那是你的实际项目文件）

• 删除缓存后第一次打开会比较慢
  （正常现象，Unity在重建缓存）

• 如果使用Git，Library和Temp应该在.gitignore中
  （标准Unity项目配置）

═══════════════════════════════════════════════════
    🔗 相关资源
═══════════════════════════════════════════════════

Unity官方文档：
  https://docs.unity3d.com/Manual/CreatingAndUsingScripts.html

常见问题：
  • "Script is Missing" 问题
  • "Assembly could not be loaded" 错误
  • "Script compilation failed" 问题

═══════════════════════════════════════════════════
    ✅ 推荐修复步骤（总结）
═══════════════════════════════════════════════════

  步骤1：保存项目
  步骤2：关闭Unity
  步骤3：删除 Library/ 和 Temp/ 文件夹
  步骤4：重新打开Unity
  步骤5：等待重新导入完成
  步骤6：检查脚本是否可用

  成功率：90%+

═══════════════════════════════════════════════════

如果以上所有方法都无法解决问题，
可能需要检查：
  • Unity安装是否损坏
  • .NET Framework是否正确安装
  • 防病毒软件是否阻止Unity访问文件

祝修复顺利！🎉

