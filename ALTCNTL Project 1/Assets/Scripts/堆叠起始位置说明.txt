═══════════════════════════════════════════════════
    堆叠起始位置配置说明
═══════════════════════════════════════════════════

📅 更新日期: 2024-10-15

───────────────────────────────────────────────────

✅ 更新内容

  调整了物品堆叠生成时的起始位置
  最底部的物品现在生成在指定位置

───────────────────────────────────────────────────

📍 默认起始位置

  X = -4.0
  Y = -3.4
  Z = 3.4

  这是最底部（第一个）物品的世界坐标位置

───────────────────────────────────────────────────

🔧 如何调整位置

  方法1：在 Inspector 中调整
  ────────────────────────────────
    1. 选中 SwaySystem 或包含 StackController 的对象
    2. 找到 StackController 组件
    3. 在"堆叠设置"区域找到 "Stack Start Position"
    4. 修改 X、Y、Z 值
    5. 运行游戏查看效果

  方法2：在代码中修改默认值
  ────────────────────────────────
    打开 StackController.cs
    找到第24行：
      public Vector3 stackStartPosition = new Vector3(-4f, -3.4f, 3.4f);
    
    修改为你想要的坐标，例如：
      public Vector3 stackStartPosition = new Vector3(0f, 0f, 0f);

───────────────────────────────────────────────────

📊 坐标系统说明

  Unity坐标系（左手坐标系）：
  
    Y ↑
      |   Z (深度)
      |  ↗
      | /
      |/____→ X
     原点

  【X轴】左右位置
    - 负值 = 左侧
    - 正值 = 右侧
    - 当前默认：-4（左侧4单位）

  【Y轴】上下位置
    - 负值 = 下方
    - 正值 = 上方
    - 当前默认：-3.4（下方3.4单位）

  【Z轴】前后位置（深度）
    - 负值 = 远离相机
    - 正值 = 靠近相机
    - 当前默认：3.4（靠近相机3.4单位）

───────────────────────────────────────────────────

🏗️ 堆叠结构

  物品是相对于起始位置向上堆叠的：

    物品5  →  Y = -3.4 + (4 × 间距)
    物品4  →  Y = -3.4 + (3 × 间距)
    物品3  →  Y = -3.4 + (2 × 间距)
    物品2  →  Y = -3.4 + (1 × 间距)
    物品1  →  Y = -3.4 + (0 × 间距)  ← 起始位置
             X = -4.0
             Z = 3.4

  注意：
  • 默认情况下只有 Y 轴会根据堆叠增加
  • X 和 Z 轴的偏移由 StackVisualController 控制
    （根据倾斜阶段动态调整）

───────────────────────────────────────────────────

🧪 测试步骤

  1. 在 Unity 中运行游戏
  2. 查看 Console 日志，应该看到：
     "[StackController] StackRoot 本地位置: (-4.0, -3.4, 3.4)"
     "[StackController] StackRoot 世界位置: ..."
  3. 在 Scene 视图中检查物品位置
  4. 确认最底部物品在正确的位置

───────────────────────────────────────────────────

⚙️ 技术细节

  【实现方式】
    • 新增 stackStartPosition 字段
    • StackRoot 的 localPosition 设为 stackStartPosition
    • 所有物品都是 StackRoot 的子对象
    • 第一个物品的 localPosition 为 (0, 0, 0)
    • 因此第一个物品的世界位置 = stackStartPosition

  【代码位置】
    StackController.cs
      - 第24行：字段定义
      - 第67行：应用位置

───────────────────────────────────────────────────

💡 常见用例

  【相机视野调整】
    如果物品不在相机视野内：
      1. 调整 Y 值（上下）
      2. 调整 Z 值（深度）
      3. 或调整相机位置

  【UI对齐】
    让堆叠与UI元素对齐：
      1. 在Scene视图中找到UI元素位置
      2. 将 Stack Start Position 设为类似坐标
      3. 微调 X、Y、Z

  【多个堆叠】
    如果需要多个独立的堆叠：
      1. 创建多个 StackController 对象
      2. 为每个设置不同的 Stack Start Position
      3. 例如：左边堆叠 (-4, -3.4, 3.4)
               右边堆叠 (4, -3.4, 3.4)

───────────────────────────────────────────────────

📝 修改记录

  v1.5.1 (2024-10-15)
    ✓ 添加 stackStartPosition 字段
    ✓ 默认值设为 (-4, -3.4, 3.4)
    ✓ 应用到 StackRoot 的 localPosition
    ✓ 增强调试日志输出

───────────────────────────────────────────────────

🔗 相关文件

  • StackController.cs - 堆叠控制器
  • StackVisualController.cs - 视觉控制器
  • SwayController.cs - 摇摆控制器

═══════════════════════════════════════════════════

